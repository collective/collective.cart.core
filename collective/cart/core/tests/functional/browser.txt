Log in as the portal owner::

    >>> from plone.app.testing import TEST_USER_NAME, TEST_USER_PASSWORD
    >>> browser.login(TEST_USER_NAME, TEST_USER_PASSWORD)

Change the display to folder_listing to make portal_url context portal::

    >>> browser.open('/selectViewTemplate?templateId=folder_listing')

Make Shopping Site::

    >>> 'Make Shopping Site' in browser.contents
    True
    >>> 'Unmake Shopping Site' in browser.contents
    False

    >>> portal['cart-container']
    Traceback (most recent call last):
    ...
    KeyError: 'cart-container'

    >>> browser.getLink('Make Shopping Site').click()

    >>> 'Make Shopping Site' in browser.contents
    False
    >>> 'Unmake Shopping Site' in browser.contents
    True

    >>> portal['cart-container']
    <Container at /plone/cart-container>

Unmake Shopping Site::

    >>> browser.getLink('Unmake Shopping Site').click()

    >>> 'Make Shopping Site' in browser.contents
    True
    >>> 'Unmake Shopping Site' in browser.contents
    False

    >>> portal['cart-container']
    <Container at /plone/cart-container>

Make Shopping Site once again::

    >>> browser.getLink('Make Shopping Site').click()

    >>> 'Make Shopping Site' in browser.contents
    False
    >>> 'Unmake Shopping Site' in browser.contents
    True

There should only be one Cart Container::

    >>> portal['cart-container']
    <Container at /plone/cart-container>
    >>> portal['cart-container-1']
    Traceback (most recent call last):
    ...
    KeyError: 'cart-container-1'

Deleting Cart Container Unmake Shopping Site::

    >>> browser.open('/cart-container/delete_confirmation')
    >>> browser.getControl('Delete').click()

    >>> portal['cart-container']
    Traceback (most recent call last):
    ...
    KeyError: 'cart-container'

    >>> 'Make Shopping Site' in browser.contents
    True
    >>> 'Unmake Shopping Site' in browser.contents
    False

    >>> 'This container is no longer a shopping site.' in browser.contents
    True

Make Shopping Site once again::

    >>> browser.getLink('Make Shopping Site').click()

    >>> 'Make Shopping Site' in browser.contents
    False
    >>> 'Unmake Shopping Site' in browser.contents
    True

Add Article::

    >>> browser.open('/++add++collective.cart.core.Article')
    >>> browser.getControl(name="form.widgets.IDublinCore.title").value = 'Article01'
    >>> browser.getControl(name="form.buttons.save").click()

Publish the Article::

    >>> browser.getLink('Publish').click()

    >>> 'Add To Cart' in browser.contents
    True

Make not salable::

    >>> browser.open('/article01/edit')
    >>> browser.getControl(name="form.widgets.ISalable.salable:list").value = False
    >>> browser.getControl(name="form.buttons.save").click()

    >>> 'Add To Cart' in browser.contents
    False

Make salable and Unmake Shopping Site:

    >>> browser.open('/article01/edit')
    >>> browser.getControl(name="form.widgets.ISalable.salable:list").value = True
    >>> browser.getControl(name="form.buttons.save").click()
    >>> browser.open(portal_url)
    >>> browser.getLink('Unmake Shopping Site').click()
    >>> browser.open('/article01')

    >>> 'Add To Cart' in browser.contents
    False

Make Shopping Site once again::

    >>> browser.open(portal_url)
    >>> browser.getLink('Make Shopping Site').click()
    >>> browser.open('/article01')

    >>> 'Add To Cart' in browser.contents
    True

Add To Cart::

    >>> browser.getControl(name="form.addtocart").click()

    >>> portal['cart-container']['1']
    <Container at /plone/cart-container/1>

Go to Cart Container and save next cart ID with existing cart ID::

    >>> browser.open('/cart-container/edit')

    >>> 'The cart ID is already in use.' in browser.contents
    False

    >>> browser.getControl(name="form.widgets.next_cart_id").value = '1'
    >>> browser.getControl(name="form.buttons.save").click()

    >>> 'The cart ID is already in use.' in browser.contents
    True

Save with non-existing cart ID:

    >>> browser.getControl(name="form.widgets.next_cart_id").value = '2'
    >>> browser.getControl(name="form.buttons.save").click()

    >>> 'The cart ID is already in use.' in browser.contents
    False

Log out::

    >>> browser.getLink('Log out').click()

Log in as editor::

    >>> browser.login(editor, editor)

Go to portal::

    >>> browser.open(portal_url)

    >>> 'Make Shopping Site' in browser.contents
    False
    >>> 'Unmake Shopping Site' in browser.contents
    False

Log out::

    >>> browser.getLink('Log out').click()

Log in as member::

    >>> browser.login(member, member)

Go to Article::

    >>> browser.open('/article01')

Add To Cart::

    >>> browser.getControl(name="form.addtocart").click()

Log out::

    >>> browser.getLink('Log out').click()

Log in as admin::

    >>> browser.login(TEST_USER_NAME, TEST_USER_PASSWORD)

Go to see Cart Container::

    >>> browser.open('/cart-container/edit')
    >>> 'value="3"' in browser.contents
    True

    >>> portal['cart-container']['2']
    <Container at /plone/cart-container/2>

Log out and log in as member again::

    >>> browser.getLink('Log out').click()
    >>> browser.login(member, member)

Go to Article and add it again::

    >>> browser.open('/article01')
    >>> browser.getControl(name="form.addtocart").click()

    >>> portal['cart-container']['3']
    Traceback (most recent call last):
    ...
    KeyError: '3'

    >>> portal['cart-container']['2']['1']
    <Container at /plone/cart-container/2/1>

    >>> portal['cart-container']['2']['2']
    Traceback (most recent call last):
    ...
    KeyError: '2'
