CartFolder
==========

Field: next_form
----
    >>> cfolder.schema['next_form']
    <Field next_form(reference:rw)>
    >>> cfolder.schema['next_form'].required == False
    True
    >>> cfolder.schema['next_form'].searchable == False
    True
    >>> cfolder.schema['next_form'].languageIndependent
    True
    >>> cfolder.schema['next_form'].storage
    <Storage AnnotationStorage>
    >>> cfolder.schema['next_form'].widget
    <....ReferenceBrowserWidget object at ...>
    >>> cfolder.schema['next_form'].widget.label
    u'Next Form'
    >>> cfolder.schema['next_form'].widget.description
    u'Select next form for check out. Only FormFolder from PloneFormGen is available.'
    >>> cfolder.schema['next_form'].allowed_types
    ('FormFolder',)
    >>> cfolder.schema['next_form'].relationship
    'next_form_relationship'

Creating Cart
----
    >>> from collective.cart.core.content import Cart
    >>> cart = Cart('cart')
    >>> cart
     <Cart at cart>
    >>> cart.portal_type
    'Cart'
    >>> from collective.cart.core.interfaces import ICartContentType
    >>> ICartContentType.providedBy(cart)
    True


    >>> cart.schema
    <Products.Archetypes.Schema.Schema object at ...>
    >>> names = [field.getName() for field in cart.schema.getSchemataFields('default')]
    >>> names
    ['id', 'title', 'description', 'constrainTypesMode', 'locallyAllowedTypes', 'immediatelyAddableTypes']

Field: id
----
    >>> cart.schema['id']
    <Field id(string:rw)>
    >>> cart.schema['id'].required == False
    True
    >>> cart.schema['id'].searchable == True
    True
    >>> cart.schema['id'].storage
    <Storage AttributeStorage>
    >>> cart.schema['id'].widget
    <Products.Archetypes.Widget.IdWidget object at ...>
    >>> cart.schema['id'].widget.label
    u'label_short_name'
    >>> cart.schema['id'].widget.description
    u'help_shortname'

    >>> cart.id = '1'
    >>> cart.getId()
    '1'

Field: title
----
    >>> cart.schema['title']
    <Field title(string:rw)>
    >>> cart.schema['title'].required == True
    True
    >>> cart.schema['title'].searchable == True
    True
    >>> cart.schema['title'].storage
    <Storage AttributeStorage>
    >>> cart.schema['title'].widget
    <Products.Archetypes.Widget.StringWidget object at ...>
    >>> cart.schema['title'].widget.label
    'Title'
    >>> cart.schema['title'].widget.description
    ''
    >>> cart.title = 'Cart01'
    >>> cart.Title()
    'Cart01'

Field: description
----
    >>> cart.schema['description']
    <Field description(text:rw)>
    >>> cart.schema['description'].required == False
    True
    >>> cart.schema['description'].searchable == True
    True
    >>> cart.schema['description'].storage
    <Storage MetadataStorage>
    >>> cart.schema['description'].widget
    <Products.Archetypes.Widget.TextAreaWidget object at ...>
    >>> cart.schema['description'].widget.label
    u'label_description'
    >>> cart.schema['description'].widget.description
    u'help_description'

Creating CartProduct
----
    >>> from collective.cart.core.content import CartProduct
    >>> product = CartProduct('product')
    >>> product
     <CartProduct at product>
    >>> product.portal_type
    'CartProduct'
    >>> from collective.cart.core.interfaces import ICartProductContentType
    >>> ICartProductContentType.providedBy(product)
    True
    >>> names = [field.getName() for field in product.Schema().getSchemataFields('default')]
    >>> names
    ['id', 'title', 'description']

Field: id
----
    >>> product.schema['id']
    <Field id(string:rw)>
    >>> product.schema['id'].required == False
    True
    >>> product.schema['id'].searchable == True
    True
    >>> product.schema['id'].storage
    <Storage AttributeStorage>
    >>> product.schema['id'].widget
    <Products.Archetypes.Widget.IdWidget object at ...>
    >>> product.schema['id'].widget.label
    u'label_short_name'
    >>> product.schema['id'].widget.description
    u'help_shortname'

    >>> product.id = '1'
    >>> product.getId()
    '1'

Field: title
----
    >>> product.schema['title']
    <Field title(string:rw)>
    >>> product.schema['title'].required == True
    True
    >>> product.schema['title'].searchable == True
    True
    >>> product.schema['title'].storage
    <Storage AttributeStorage>
    >>> product.schema['title'].widget
    <Products.Archetypes.Widget.StringWidget object at ...>
    >>> product.schema['title'].widget.label
    'Title'
    >>> product.schema['title'].widget.description
    ''
    >>> product.title = 'Product01'
    >>> product.Title()
    'Product01'

Field: description
----
    >>> product.schema['description']
    <Field description(text:rw)>
    >>> product.schema['description'].required == False
    True
    >>> product.schema['description'].searchable == True
    True
    >>> product.schema['description'].storage
    <Storage MetadataStorage>
    >>> product.schema['description'].widget
    <Products.Archetypes.Widget.TextAreaWidget object at ...>
    >>> product.schema['description'].widget.label
    u'label_description'
    >>> product.schema['description'].widget.description
    u'help_description'
